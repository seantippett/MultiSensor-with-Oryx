/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

#ifndef _PERIPHERALS_H_
#define _PERIPHERALS_H_

/***********************************************************************************************************************
 * Included files
 **********************************************************************************************************************/
#include "fsl_common.h"
#include "fsl_gpt.h"
#include "fsl_clock.h"
#include "fsl_lpi2c.h"
#include "fsl_gpio.h"
#include "fsl_lpadc.h"
#include "fsl_lpspi.h"
#include "fsl_lpuart.h"
#include "fsl_edma.h"
#include "fsl_pit.h"
#include "fsl_adc_etc.h"
#include "fsl_wdog.h"
#include "fsl_dmamux.h"
#include "fsl_xbara.h"
#include "fsl_pdm_edma.h"

#include "app_shared.h"

#if defined(__cplusplus)
extern "C" {
#endif /* __cplusplus */

/***********************************************************************************************************************
 * Definitions
 **********************************************************************************************************************/
/* Definitions for BOARD_InitPeripherals functional group */
/* Definition of peripheral ID */
#define GPT2_PERIPHERAL GPT2
/* Definition of the clock source frequency */
#define GPT2_CLOCK_SOURCE 24000000UL
/* BOARD_InitPeripherals defines for SEMC */
/* Definition of peripheral ID. */
#define SEMC_PERIPHERAL SEMC
/* BOARD_InitPeripherals defines for LPI2C5 */
/* Definition of peripheral ID */
#define ACCEL_LPI2C_PERIPHERAL LPI2C6
/* Definition of clock source */
#define ACCEL_LPI2C_CLOCK_FREQ 24000000UL
/* Transfer buffer size */
#define ACCEL_LPI2C_MASTER_BUFFER_SIZE 64
/* Definition of slave address */
#define ACCEL_LPI2C_MASTER_SLAVE_ADDRESS 0
/* BOARD_InitPeripherals defines for LPI2C6 */
/* Definition of peripheral ID */
#define CAMERA_LPI2C_PERIPHERAL LPI2C5
/* Definition of clock source */
#define CAMERA_LPI2C_CLOCK_FREQ 24000000UL
/* Transfer buffer size */
#define CAMERA_LPI2C_MASTER_BUFFER_SIZE 1
/* Definition of slave address */
#define CAMERA_LPI2C_MASTER_SLAVE_ADDRESS 0
/* Definition of peripheral ID */
#define GPT3_PERIPHERAL GPT3
/* Definition of the clock source frequency */
#define GPT3_CLOCK_SOURCE 24000000UL
/* GPT3 interrupt vector ID (number). */
#define GPT3_GPT_IRQN GPT3_IRQn
/* GPT3 interrupt handler identifier. */
#define GPT3_IRQHandler GPT3_IRQHandler
/* CM7_GPIO3 interrupt vector ID (number). */
#define CM7_GPIO3_GPIO_COMB_0_15_IRQN CM7_GPIO2_3_IRQn
/* CM7_GPIO3 interrupt handler identifier. */
#define CM7_GPIO3_GPIO_COMB_0_15_IRQHANDLER CM7_GPIO2_3_IRQHandler

/* Definitions for SHIELD_InitPeripherals functional group */

#define PIT_BASEADDR 			PIT1
#define PIT_CHANNEL       		kPIT_Chnl_0
extern uint32_t	currentPITPeriod;

// crossbar switch.
#define XBARA_BASEADDR 			XBARA1

#define XBARA_INPUT_PITCH0		kXBARA1_InputPit1Trigger0			// periodic interrupt timer = PIT
#define XBARA_OUTPUT_ADC_ETC	kXBARA1_OutputAdcEtc0Coco0
#define BUS_CLK_FREQ CLOCK_GetRootClockFreq(kCLOCK_Root_Bus)



/* Alias for LPADC1 peripheral */

#define LPADC_PERIPHERAL  LPADC1


// LPADC commands.

	#define ADC_SAMPLE_TIME			kLPADC_SampleTimeADCK131	// this was set to 7 from 3.  I.e. no rush.  now changed to kLPADC_SampleTimeADCK131

	#define ADC_COMMAND_NUMB__V_NETWORK		1
	#define ADC_CHANNEL__V_NETWORK		3
	#define ADC_CHANNEL_MODE__V_NETWORK	kLPADC_SampleChannelSingleEndSideA

	#define ADC_COMMAND_NUMB__IMON_A		2
	#define ADC_CHANNEL__IMON_A			3
	#define ADC_CHANNEL_MODE__IMON_A	kLPADC_SampleChannelSingleEndSideB

	#define ADC_COMMAND_NUMB__IMON_B		3
	#define ADC_CHANNEL__IMON_B			4
	#define ADC_CHANNEL_MODE__IMON_B	kLPADC_SampleChannelSingleEndSideA

	#define ADC_WATERMARK_THRESHOLD		9		//  Unit is # of samples.  This watermark triggers a DMA activation. (what triggers a DMA activation).






#define ADC_ETC_DONE0_Handler ADC_ETC_IRQ0_IRQHandler	// This was used for debugging.  Triggers when ADC command chain is done.
#define ADC_FIRST_CMDID    1U							// NOTE!  Command ID's start at 1... not 0.


// SETUP FOR THE ADC_ETC.
#define ADC_ETC_TRIGGER_GROUP		0
#define ADC_CHANNEL_GROUP 0
#define ADC_ETC_CHANNEL 0




#define DMAMUX_ADC_BASEADDR		DMAMUX0
#define	EDMA_ADC_BASEADDR		DMA0
#define EDMA_ADC_CHANNEL	2
#define EDMA_ADC_REQUEST_SOURCE		kDmaRequestMuxADC1//kDmaRequestMuxADC_ETC//			// Note that this comes from the ADC itself, not the ADC_ETC.  VERY different requests.
extern edma_handle_t ADC_EdmaHandle_0;
#define ADC_DMA_BUFFER_LENGTH       32
#define HALF_ADC_DMA_BUFFER_LENGTH	(BUFFER_LENGTH / 2)
#define TCD_QUEUE_SIZE      2U

// SETUP for the PDM
#define EDMA_PDM_CHANNEL	0
#define PDM_REQUEST_SOURCE			kDmaRequestMuxPdm
#define AUDIO_SAMPLE_RATE			16000
//#define PDM_DMA_BUFFER_LENGTH		AUDIO_SAMPLE_RATE

//#define DEMO_PDM                      PDM
#define PDM_ERROR_IRQn           		PDM_ERROR_IRQn
#define PDM_ERROR_IRQHandler     		PDM_ERROR_IRQHandler
#define DEMO_PDM_CLK_FREQ             	24576000
#define DEMO_PDM_FIFO_WATERMARK       	(4)
#define DEMO_PDM_QUALITY_MODE         	kPDM_QualityModeHigh
#define DEMO_PDM_CIC_OVERSAMPLE_RATE  	(0U)

#define DEMO_PDM_SAMPLE_CLOCK_RATE    (6144000) /* 6.144MHZ */
#define EDMA_PDM_BASEADDR               DMA0
#define DMAMUX_PDM_BASEADDR             DMAMUX0


//#define DEMO_AUDIO_SAMPLE_RATE        48000
#define PDM_EDMA_CHANNEL			0
#define PDM_REQUEST_SOURCE			kDmaRequestMuxPdm

extern pdm_edma_handle_t s_pdmRxHandle_0;
extern edma_handle_t s_pdmDmaHandle_0;
extern edma_tcd_t s_edmaTcd_0[2];			// for PDM.
void pdmCallback(PDM_Type *base, pdm_edma_handle_t *handle, status_t status, void *userData);
extern pdm_edma_transfer_t pdmXfer[2];


// LPUART - RADAR //
#define DMAMUX_LPUART_BASEADDR			DMAMUX0
#define EDMA_LPUART_BASEADDR			DMA0
#define LPUART_EDMA_CHANNEL_RX				1
#define LPUART_EDMA_CHANNEL_TX				3
#define LPUART_REQUEST_SOURCE_RX		    kDmaRequestMuxLPUART2Rx
#define LPUART_REQUEST_SOURCE_TX		    kDmaRequestMuxLPUART2Tx

extern edma_handle_t	LPUART_EdmaHandle_RX0;
extern edma_handle_t	LPUART_EdmaHandle_TX0;









extern uint32_t	currentPITPeriod;
#define SAMPLING_PERIOD_STARTUP_uS			(5000u)//(500u)
#define SAMPLING_PERIOD_uS					(50000u)
#define CURRENT_SAMPLING_PERIOD_float		(((float)currentPITPeriod) / ((float)1000000))
void changePIT_Period_uS(uint32_t newTimerPeriod);
extern void PIT_Configuration(void);










/* SHIELD_InitPeripherals defines for LPSPI1 */
/* Definition of peripheral ID */
#define PHY_LPSPI_PERIPHERAL LPSPI1
/* Definition of clock source */
#define PHY_LPSPI_CLOCK_FREQ 24000000UL
/* Definition of peripheral ID */
#define MICROWAVE_LPUART_PERIPHERAL LPUART2
/* Definition of the clock source frequency */
#define MICROWAVE_LPUART_CLOCK_SOURCE 24000000UL

/***********************************************************************************************************************
 * Global variables
 **********************************************************************************************************************/
extern const gpt_config_t GPT2_config;
extern const lpi2c_master_config_t ACCEL_LPI2C_masterConfig;
extern lpi2c_master_transfer_t ACCEL_LPI2C_masterTransfer;
extern uint8_t ACCEL_LPI2C_masterBuffer[ACCEL_LPI2C_MASTER_BUFFER_SIZE];
extern lpi2c_master_handle_t ACCEL_LPI2C_masterHandle;
extern const lpi2c_master_config_t CAMERA_LPI2C_masterConfig;
extern lpi2c_master_transfer_t CAMERA_LPI2C_masterTransfer;
extern uint8_t CAMERA_LPI2C_masterBuffer[CAMERA_LPI2C_MASTER_BUFFER_SIZE];
extern lpi2c_master_handle_t CAMERA_LPI2C_masterHandle;
extern const gpt_config_t GPT3_config;
extern const lpadc_config_t LPADC1_config;
extern lpadc_conv_command_config_t LPADC1_commandsConfig[6];
extern lpadc_conv_trigger_config_t LPADC1_triggersConfig[3];
extern const lpspi_master_config_t LPSPI1_config;
extern const lpuart_config_t SHIELD_LPUART2_config;

/***********************************************************************************************************************
 * Initialization functions
 **********************************************************************************************************************/

void BOARD_InitPeripherals(void);



/***********************************************************************************************************************
 * BOARD_InitBootPeripherals function
 **********************************************************************************************************************/
void BOARD_InitBootPeripherals(void);

#if defined(__cplusplus)
}
#endif

#endif /* _PERIPHERALS_H_ */
